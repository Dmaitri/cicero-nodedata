{"version":3,"sources":["models/projectsmodel.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA+B,kCAAkC,CAAC,CAAA;AAClE,MAAY,SAAS,WAAM,WAAW,CAAC,CAAA;AAIvC;AAkDA,CAAC;AAjDG;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAC,aAAa,EAAC,IAAI,EAAE,CAAC;;yCAAA;AAGvG;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC;;0CAAA;AAGjD;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;;8CAAA;AAGnD;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;qDAAA;AAG9E;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;wDAAA;AAG9E;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;wDAAA;AAGjF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;0DAAA;AAGhF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;0DAAA;AAGnF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;4DAAA;AAGlF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;wDAAA;AAGjF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;0DAAA;AAhCpF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;;gBAAA;AACjF,oBAAY,eAkDxB,CAAA;AAED;kBAAe,YAAY,CAAC","file":"models/projectsmodel.js","sourcesContent":["import { column, entity } from 'nodedata/sequelizeimp/decorators';\r\nimport * as Sequelize from \"sequelize\";\r\n\r\n\r\n@entity({ name: 'projects', tableName: 'projects', timestamps: false, freezeTableName: true })\r\nexport class ProjectModel {\r\n    @column({ name: \"id\", type: Sequelize.INTEGER, allowNull: false, primaryKey: true,autoIncrement:true })\r\n    _id: number;\r\n\r\n    @column({ name: \"Name\", type: Sequelize.STRING })\r\n    Name: string;\r\n\r\n    @column({ name: \"Uniqueid\", type: Sequelize.UUID })\r\n    Uniqueid: any;\r\n\r\n    @column({ name: \"ConfigSynStatus\", type: Sequelize.INTEGER, allowNull: true })\r\n    ConfigSynStatus: number;\r\n\r\n    @column({ name: \"LastConfigSyncDate\", type: Sequelize.DATE, allowNull: true })\r\n    LastConfigSyncDate: Date;\r\n\r\n    @column({ name: \"UpdateReportStatus\", type: Sequelize.INTEGER, allowNull: true })\r\n    UpdateReportStatus: number;\r\n\r\n    @column({ name: \"LastUpdateReportDate\", type: Sequelize.DATE, allowNull: true })\r\n    LastUpdateReportDate: Date;\r\n\r\n    @column({ name: \"ExecuteProcessStatus\", type: Sequelize.INTEGER, allowNull: true })\r\n    ExecuteProcessStatus: number;\r\n\r\n    @column({ name: \"LastExecuteProcessDate\", type: Sequelize.DATE, allowNull: true })\r\n    LastExecuteProcessDate: Date;\r\n\r\n    @column({ name: \"UpdateConfigStatus\", type: Sequelize.INTEGER, allowNull: true })\r\n    UpdateConfigStatus: number;\r\n\r\n    @column({ name: \"LastUpdateConfigDate\", type: Sequelize.DATE, allowNull: true })\r\n    LastUpdateConfigDate: Date;\r\n    // constructor(){\r\n    //     this._id=0;\r\n    //     this.name=\"\";\r\n    //     this.roles=new Array<RoleModel>();\r\n    // }\r\n    // constructor(userDto: IUser) {\r\n    //     this._links = {};\r\n    //     this._id = <any>userDto._id;\r\n    //     this.name = userDto.name;\r\n    //     //this.age = userDto.age;\r\n    //     //this.password = userDto.password;\r\n    //     //this.email = userDto.email;\r\n    //     if (userDto.roles)\r\n    //         this.roles = userDto.roles;\r\n    //     else\r\n    //         this.roles = new Array<RoleModel>();\r\n    // }\r\n}\r\n\r\nexport default ProjectModel;"],"sourceRoot":"/source/"}