{"version":3,"sources":["models/processstatusmodel.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA+B,kCAAkC,CAAC,CAAA;AAClE,MAAY,SAAS,WAAM,WAAW,CAAC,CAAA;AAGvC;AA0CA,CAAC;AAzCG;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAC,aAAa,EAAC,IAAI,EAAE,CAAC;;+CAAA;AAGvG;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC;;uDAAA;AAGxD;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC;;4DAAA;AAG9D;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;;gDAAA;AAGpE;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;;2DAAA;AAG/E;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;oEAAA;AAGvF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;8DAAA;AAGjF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;6DAAA;AAGhF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;yDAAA;AAG5E;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;2DAAA;AAG9E;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;oDAAA;AAGvE;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;qDAAA;AAGxE;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;6DAAA;AAGhF;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;oEAAA;AAzC3F;IAAC,mBAAM,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,sBAAsB,EAAE,UAAU,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;;sBAAA;AAClG,0BAAkB,qBA0C9B,CAAA;AAED;kBAAe,kBAAkB,CAAC","file":"models/processstatusmodel.js","sourcesContent":["import { column, entity } from 'nodedata/sequelizeimp/decorators';\r\nimport * as Sequelize from \"sequelize\";\r\n\r\n@entity({ name: 'processstatus', tableName: 'processstatus_maitri', timestamps: false, freezeTableName: true })\r\nexport class ProcessStatusModel {\r\n    @column({ name: \"id\", type: Sequelize.INTEGER, allowNull: false, primaryKey: true,autoIncrement:true })\r\n    _id: number;\r\n\r\n    @column({ name: \"projectname\", type: Sequelize.STRING })\r\n    Projectname: string;\r\n\r\n    @column({ name: \"checkEnvironment\", type: Sequelize.BOOLEAN })\r\n    CheckEnvironment: boolean;\r\n\r\n    @column({ name: \"main\", type: Sequelize.BOOLEAN, allowNull: false })\r\n    Main: boolean;\r\n\r\n    @column({ name: \"mainGitAnalysis\", type: Sequelize.BOOLEAN, allowNull: false })\r\n    MainGitAnalysis: boolean;\r\n\r\n    @column({ name: \"prepareConfigurationList\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    PrepareConfigurationList: boolean;\r\n\r\n    @column({ name: \"mainCiceroAnalysis\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    MainCiceroAnalysis: boolean;\r\n\r\n    @column({ name: \"mainSonarAnalysis\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    MainSonarAnalysis: boolean;\r\n\r\n    @column({ name: \"sonarAnalysis\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    SonarAnalysis: boolean;\r\n\r\n    @column({ name: \"productivityjob\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    Productivityjob: boolean;\r\n\r\n    @column({ name: \"sonarETL\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    SonarETL: boolean;\r\n\r\n    @column({ name: \"analytics\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    Analytics: boolean;\r\n\r\n    @column({ name: \"prepareMainStatus\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    PrepareMainStatus: boolean;\r\n\r\n    @column({ name: \"combineCeicroModelsOfall\", type: Sequelize.BOOLEAN, allowNull: true })\r\n    CombineCeicroModelsOfall: boolean;\r\n}\r\n\r\nexport default ProcessStatusModel;"],"sourceRoot":"/source/"}