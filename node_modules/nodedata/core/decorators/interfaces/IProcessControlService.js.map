{"version":3,"sources":["core/decorators/interfaces/IProcessControlService.ts"],"names":[],"mappings":";AAYa,iCAAyB,GAAG,uBAAuB,CAAC;AAEjE;;;GAGG;AACU,6BAAqB,GAAG,uBAAuB,CAAC","file":"core/decorators/interfaces/IProcessControlService.js","sourcesContent":["import {workerParamsDto} from './workerParamsDto';\nimport {ProcessControlModel} from '../../../tests/models/processControlModel';\nimport { IProcessControlParams } from './IProcessControlParams';\n\nexport interface IProcessControlService {\n    initialize(serviceName: string, methodName: string, targetObjectId: any, processControlParams: IProcessControlParams, taskInfo?: workerParamsDto): Q.Promise<boolean>;\n    startProcess(): Q.Promise<boolean>;\n    completeProcess(responseData: any): Q.Promise<boolean>;\n    errorOutProcess(errorMessage: string): Q.Promise<boolean>;\n    sendResponse(processModel: any, workerDetails?: workerParamsDto): Q.IPromise<any>;\n}\n\nexport const processControlServiceName = 'ProcessControlService';\n\n/**\n * get or set processControlContext through PrincipalContext\n * Use to store processControlModel in PrincipalContext to access in main application as well as in worker process\n */\nexport const processControlContext = \"processControlContext\";\n"],"sourceRoot":"/source/"}