"use strict";
const utils_1 = require("../metadata/utils");
const Utils = require("../utils");
const decorators_1 = require('../constants/decorators');
const winstonLog_1 = require('../../logging/winstonLog');
const Enumerable = require('linq');
var Q = require('q');
var serviceCollection = {};
class PostFilterService {
    static postFilter(result, preAuthParam) {
        var service;
        if (serviceCollection[preAuthParam.serviceName]) {
            service = serviceCollection[preAuthParam.serviceName];
        }
        else {
            var services = utils_1.MetaUtils.getMetaDataForDecorators([decorators_1.Decorators.SERVICE]);
            service = Enumerable.from(services).where(x => x.metadata[0].params.serviceName == preAuthParam.serviceName).select(x => x.metadata[0]).firstOrDefault();
        }
        if (service) {
            serviceCollection[preAuthParam.serviceName] = service;
            var param = [];
            param.push(result);
            let ret = service.target[preAuthParam.methodName].call(service.target, ...param);
            if (Utils.isPromise(ret)) {
                //console.timeEnd("postFilter_" + preAuthParam.serviceName);
                return ret.then(result => {
                    return result;
                }).catch((err) => {
                    winstonLog_1.winstonLog.logError('[PostFilterService: postFilter]: error ' + err);
                    throw err;
                });
            }
            else {
                //console.timeEnd("postFilter_" + preAuthParam.serviceName);
                return Q.when(ret);
            }
        }
        return Q.when(true);
    }
}
exports.PostFilterService = PostFilterService;

//# sourceMappingURL=post-filter-service.js.map
