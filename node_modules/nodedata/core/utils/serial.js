"use strict";
const Q = require('q');
class SerialTask {
    static serial(tasks, dataSheets) {
        var results = [];
        var chain = Q.when();
        tasks.forEach(function (task, key) {
            //var successTask = task.success || task;
            //var failTask = task.fail;
            //var notifyTask = task.notify;
            chain = chain.then(/*success*/ function () {
                //results.push(data);
                //if (data && dataSheets) {
                //    dataSheets.push(data);
                //}
                //if (!successTask) {
                //    return data; 
                //}
                var ret = task([]);
                if (ret['then']) {
                    ret.then(res => {
                        results[key] = res;
                    });
                }
                else {
                    results[key] = ret;
                }
                return ret;
            }, /*failure*/ function (reason) {
                results[key] = reason;
                return reason;
                //if (!failTask) { return Q.reject(reason); }
                //// User defined fail callback
                //var ret = failTask([reason]);
                //results[key] = ret;
                //return ret;
            });
        });
        return chain.then(r => {
            return results;
        });
    }
    static getTask(scope, fn, args) {
        var func = function (closureFnArgs) {
            return fn.apply(scope, args);
        };
        return func;
    }
}
exports.SerialTask = SerialTask;

//# sourceMappingURL=serial.js.map
