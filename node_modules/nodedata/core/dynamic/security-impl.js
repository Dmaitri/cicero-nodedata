"use strict";
//This is default behaviour of the methods.It will be overridden at run time.
function ensureLoggedIn() {
    return function (req, res, next) {
        next();
    };
}
exports.ensureLoggedIn = ensureLoggedIn;
function isAuthorize(req, repository, invokedFunction) {
    return true;
}
exports.isAuthorize = isAuthorize;
function getContextObjectFromSession(sessionObj) {
    return {};
}
exports.getContextObjectFromSession = getContextObjectFromSession;
function updateSession(inObj, curSession) {
    return new Promise((resolve, reject) => {
        resolve(true);
    });
}
exports.updateSession = updateSession;
function getSession(query) {
    return new Promise((resolve, reject) => {
        resolve({});
    });
}
exports.getSession = getSession;
function getSessionLastTimeStampForChannel(query, channel, curSession) {
    return new Promise((resolve, reject) => {
        resolve(new Date());
    });
}
exports.getSessionLastTimeStampForChannel = getSessionLastTimeStampForChannel;
function getSessionLastAckForChannel(query, channel, curSession) {
    return new Promise((resolve, reject) => {
        resolve(new Date());
    });
}
exports.getSessionLastAckForChannel = getSessionLastAckForChannel;

//# sourceMappingURL=security-impl.js.map
