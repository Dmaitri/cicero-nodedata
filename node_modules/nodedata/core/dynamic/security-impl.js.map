{"version":3,"sources":["core/dynamic/security-impl.ts"],"names":[],"mappings":";AAAA,6EAA6E;AAC7E;IACI,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI;QAC3B,IAAI,EAAE,CAAC;IACX,CAAC,CAAA;AACL,CAAC;AAJe,sBAAc,iBAI7B,CAAA;AAED,qBAA4B,GAAQ,EAAE,UAAe,EAAE,eAAwB;IAC3E,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;AAFe,mBAAW,cAE1B,CAAA;AAGD,qCAA4C,UAAe;IACvD,MAAM,CAAC,EAAE,CAAC;AACd,CAAC;AAFe,mCAA2B,8BAE1C,CAAA;AAED,uBAA8B,KAAU,EAAE,UAAe;IACrD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,CAAA;AACN,CAAC;AAJe,qBAAa,gBAI5B,CAAA;AAED,oBAA2B,KAAU;IACjC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,OAAO,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC,CAAC,CAAA;AACN,CAAC;AAJe,kBAAU,aAIzB,CAAA;AAED,2CAAkD,KAAU,EAAE,OAAe,EAAE,UAAgB;IAC3F,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAA;AACN,CAAC;AAJe,yCAAiC,oCAIhD,CAAA;AAED,qCAA4C,KAAU,EAAE,OAAe,EAAE,UAAgB;IACrF,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAA;AACN,CAAC;AAJe,mCAA2B,8BAI1C,CAAA","file":"core/dynamic/security-impl.js","sourcesContent":["//This is default behaviour of the methods.It will be overridden at run time.\nexport function ensureLoggedIn() {\n    return function (req, res, next) {\n        next();\n    }\n}\n\nexport function isAuthorize(req: any, repository: any, invokedFunction?: string): boolean {\n    return true;\n}\n\n\nexport function getContextObjectFromSession(sessionObj: any) {\n    return {};\n}\n\nexport function updateSession(inObj: any, curSession: any) {\n    return new Promise((resolve, reject) => {\n        resolve(true);\n    })\n}\n\nexport function getSession(query: any) {\n    return new Promise((resolve, reject) => {\n        resolve({});\n    })\n}\n\nexport function getSessionLastTimeStampForChannel(query: any, channel: string, curSession?: any) {\n    return new Promise((resolve, reject) => {\n        resolve(new Date());\n    })\n}\n\nexport function getSessionLastAckForChannel(query: any, channel: string, curSession?: any) {\n    return new Promise((resolve, reject) => {\n        resolve(new Date());\n    })\n}"],"sourceRoot":"/source/"}