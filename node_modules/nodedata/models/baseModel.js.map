{"version":3,"sources":["models/baseModel.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA0D,oBAAoB,CAAC,CAAA;AAC/E,6BAA8B,wBAAwB,CAAC,CAAA;AAGvD;AAwBA,CAAC;AAvBG;IAAC,kBAAK,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;;sCAAA;AAG9C;IAAC,kBAAK,EAAE;;uCAAA;AAMR;IAAC,sBAAS,EAAE;;sDAAA;AAMZ;IAAC,sBAAS,EAAE;;kDAAA;AAMZ;IAAC,sBAAS,EAAE;;gDAAA;AAtBH,iBAAS,YAwBrB,CAAA;AAED;kBAAe,SAAS,CAAC","file":"models/baseModel.js","sourcesContent":["import {onetomany, manytoone, manytomany, transient} from '../core/decorators';\nimport {field, document} from '../mongoose/decorators';\nimport {Strict} from '../mongoose/enums';\n\nexport class BaseModel {\n    @field({ primary: true, autogenerated: true })\n    _id: any;\n\n    @field()\n    name: any;\n\n    /*\n       nodedata internal use for caching, use for findWhere case\n   */\n    @transient()\n    __selectedFindWhere: boolean;\n\n    /*\n        nodedata internal use for caching, to marked as partial load for findMany (egar load case not load)\n    */\n    @transient()\n    __partialLoaded: boolean;\n\n    /*\n        nodedata internal use for caching, to marked as fully load\n    */\n    @transient()\n    __FullyLoaded: boolean;\n}\n\nexport default BaseModel;"],"sourceRoot":"/source/"}