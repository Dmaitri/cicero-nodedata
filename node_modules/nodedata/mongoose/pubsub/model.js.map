{"version":3,"sources":["mongoose/pubsub/model.ts"],"names":[],"mappings":"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","file":"mongoose/pubsub/model.js","sourcesContent":["\nimport * as CoreUtils from '../../core/utils';\nvar Mongoose:any = require('mongoose');\nvar db = require(\"../db\");\n\nvar defaultMessengerSize = 1024 * 1024 * 100;\nvar mainMessagerName = 'Message1';\nvar mainMessengerSize = 1024 * 1024 * 100;\n\nif (CoreUtils.config().mainMessagerName) {\n    mainMessagerName = CoreUtils.config().mainMessagerName;\n}\n\nif (CoreUtils.config().mainMessengerSize) {\n    mainMessengerSize = CoreUtils.config().mainMessengerSize;\n}\n\nif (CoreUtils.config().defaultMessengerSize) {\n    defaultMessengerSize = CoreUtils.config().defaultMessengerSize;\n}\n\nvar MessageFordefaultMessengerSize = new Mongoose.Schema({\n    channel: String,\n    timestamp: { type: Date, default: Date.now },\n    message: {}\n}, {\n        capped: {\n            size: defaultMessengerSize, // in bytes\n            autoIndexId: true\n\n        },\n        validateBeforeSave: false\n    });\n\nvar MessageForMainMessengerSize = new Mongoose.Schema({\n    channel: String,\n    timestamp: { type: Date, default: Date.now },\n    message: {}\n}, {\n        capped: {\n            size: mainMessengerSize, // in bytes\n            autoIndexId: true\n\n        },\n        validateBeforeSave: false\n    });\n\nvar getMessengerOfSize = (size) => new Mongoose.Schema({\n    channel: String,\n    timestamp: { type: Date, default: Date.now },\n    message: {}\n}, {\n        capped: {\n            size: size, // in bytes\n            autoIndexId: true\n\n        },\n        validateBeforeSave: false\n    });\n\n\nexport function getMessage(collectionName?: string, size?: number):any{\n\t\n    if (CoreUtils.config().mainMessagerName) {\n        mainMessagerName = CoreUtils.config().mainMessagerName;\n    }\n\n    if (CoreUtils.config().mainMessengerSize) {\n        mainMessengerSize = CoreUtils.config().mainMessengerSize;\n    }\n\n    if (CoreUtils.config().defaultMessengerSize) {\n        defaultMessengerSize = CoreUtils.config().defaultMessengerSize;\n    }\n\n    let schemaName = mainMessagerName;\n    let schema = MessageForMainMessengerSize;\n    if (collectionName) {\n        schemaName = collectionName;\n        schema = MessageFordefaultMessengerSize;\n    }\n    if (size) {\n        schema = getMessengerOfSize(size);\n    }\n\n    return db.getDbSpecifcModel(schemaName, schema);\n}\n\nmodule.exports = getMessage \n"],"sourceRoot":"/source/"}