"use strict";
const CoreUtils = require('../../core/utils');
var Mongoose = require('mongoose');
var db = require("../db");
var defaultMessengerSize = 1024 * 1024 * 100;
var mainMessagerName = 'Message1';
var mainMessengerSize = 1024 * 1024 * 100;
if (CoreUtils.config().mainMessagerName) {
    mainMessagerName = CoreUtils.config().mainMessagerName;
}
if (CoreUtils.config().mainMessengerSize) {
    mainMessengerSize = CoreUtils.config().mainMessengerSize;
}
if (CoreUtils.config().defaultMessengerSize) {
    defaultMessengerSize = CoreUtils.config().defaultMessengerSize;
}
var MessageFordefaultMessengerSize = new Mongoose.Schema({
    channel: String,
    timestamp: { type: Date, default: Date.now },
    message: {}
}, {
    capped: {
        size: defaultMessengerSize,
        autoIndexId: true
    },
    validateBeforeSave: false
});
var MessageForMainMessengerSize = new Mongoose.Schema({
    channel: String,
    timestamp: { type: Date, default: Date.now },
    message: {}
}, {
    capped: {
        size: mainMessengerSize,
        autoIndexId: true
    },
    validateBeforeSave: false
});
var getMessengerOfSize = (size) => new Mongoose.Schema({
    channel: String,
    timestamp: { type: Date, default: Date.now },
    message: {}
}, {
    capped: {
        size: size,
        autoIndexId: true
    },
    validateBeforeSave: false
});
function getMessage(collectionName, size) {
    if (CoreUtils.config().mainMessagerName) {
        mainMessagerName = CoreUtils.config().mainMessagerName;
    }
    if (CoreUtils.config().mainMessengerSize) {
        mainMessengerSize = CoreUtils.config().mainMessengerSize;
    }
    if (CoreUtils.config().defaultMessengerSize) {
        defaultMessengerSize = CoreUtils.config().defaultMessengerSize;
    }
    let schemaName = mainMessagerName;
    let schema = MessageForMainMessengerSize;
    if (collectionName) {
        schemaName = collectionName;
        schema = MessageFordefaultMessengerSize;
    }
    if (size) {
        schema = getMessengerOfSize(size);
    }
    return db.getDbSpecifcModel(schemaName, schema);
}
exports.getMessage = getMessage;
module.exports = getMessage;

//# sourceMappingURL=model.js.map
