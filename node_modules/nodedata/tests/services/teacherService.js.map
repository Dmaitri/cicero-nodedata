{"version":3,"sources":["tests/services/teacherService.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,yBAAmC,4BAA4B,CAAC,CAAA;AAChE,0BAAsB,6BAA6B,CAAC,CAAA;AACpD,MAAY,iBAAiB,WAAM,mCAAmC,CAAC,CAAA;AACvE,6BAAsC,uBAAuB,CAAC,CAAA;AAC9D,0BAAsB,mBAAmB,CAAC,CAAA;AAI1C;IAKI,gBAAgB,CAAC,GAAY;QACzB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IAGD,wBAAwB,CAAC,GAAY;QACjC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IAGD,iCAAiC,CAAC,GAAY;QAC1C,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IAGD,QAAQ;QACJ,IAAI,IAAI,GAAG,IAAI,OAAO,CAClB,CAAC,OAAO,EAAE,MAAM;YACZ,IAAI,SAAS,GAAG,UAAU,CAAC;gBACvB,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,EAAE,IAAI,CAAC,CAAA;QACZ,CAAC,CACJ,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACb,MAAM,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IAGP,CAAC;AACL,CAAC;AAlCG;IAAC,eAAM,CAAC,iBAAiB,CAAC;gDACoB,iBAAiB;0DADrC;AAG1B;IAAC,mBAAM,EAAE;;;;sDAAA;AAKT;IAAC,4BAAe,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,8BAA8B,EAAE,CAAC,EAAC,CAAC;;;;8DAAA;AAKzF;IAAC,4BAAe,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,8BAA8B,EAAE,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;;;;uEAAA;AAKjH;IAAC,4BAAe,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,8BAA8B,EAAE,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;;;;8CAAA;AApBrH;IAAC,iBAAO,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC;;kBAAA;AAC/C,sBAAc,iBAmC1B,CAAA;AAED;kBAAe,cAAc,CAAC","file":"tests/services/teacherService.js","sourcesContent":["import {inject, injectbyname} from '../../di/decorators/inject';\nimport {service} from '../../di/decorators/service';\nimport * as teacherRepository from '../repositories/teacherRepository';\nimport {Worker, processStartEnd} from '../../core/decorators';\nimport {teacher} from '../models/teacher';\nimport Q = require('q');\n\n@service({ singleton: true, serviceName: 'teacherService' })\nexport class TeacherService {\n    @inject(teacherRepository)\n    private _teacherRepository: teacherRepository.TeacherRepository;\n\n    @Worker()\n    addTeacherWorker(obj: teacher) {\n        return this._teacherRepository.post(obj);\n    }\n\n    @processStartEnd({ type: 'teacher', action: 'update', indexofArgumentForTargetObject: 0})\n    addTeacherProcessControl(obj: teacher) {\n        return this._teacherRepository.post(obj);\n    }\n\n    @processStartEnd({ type: 'teacher', action: 'update', indexofArgumentForTargetObject: 0, executeInWorker: true })\n    addTeacherProcessControlAndWorker(obj: teacher) {\n        return this._teacherRepository.post(obj);\n    }\n\n    @processStartEnd({ type: 'teacher', action: 'update', indexofArgumentForTargetObject: 0, executeInWorker: true })\n    longTask() {\n        let prom = new Promise(\n            (resolve, reject) => {\n                let asyncCall = setTimeout(() => {\n                    resolve(\"fg\");\n                }, 5000)\n            }\n        );\n\n       return prom.then(s => {\n            return s;\n        });\n\n        \n    }\n}\n\nexport default TeacherService;\n\n"],"sourceRoot":"/source/"}