{"version":3,"sources":["tests/repositories/teacherRepository.ts"],"names":[],"mappings":"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","file":"tests/repositories/teacherRepository.js","sourcesContent":["import {repository} from \"../../core/decorators\";\nimport {DynamicRepository} from \"../../core/dynamic/dynamic-repository\";\nimport {inject} from \"../../di/decorators\";\nimport {entityAction, EntityActionParam} from '../../core/decorators/entityAction';\nimport {teacher} from '../models/teacher';\nimport {AuthorizationRepository} from '../../repositories/authorizationRepository';\nimport * as TeacherService from '../services/teacherService';\nimport {Types} from 'mongoose';\nimport Q = require('q');\n\n@repository({ path: 'teacher', model: teacher })\nexport class TeacherRepository extends DynamicRepository {\n\n    @inject(TeacherService)\n    private _teacherService: TeacherService.TeacherService;\n\n    findOne(id, donotLoadChilds?: boolean): Q.Promise<any> {\n        return super.findOne(id).then(x => {\n            return super.findOne(id).then(r => {\n                let re = r;\n                return re;\n            });\n        });\n    }\n\n    findMany(ids: Array<any>, toLoadEmbededChilds?: boolean): Q.Promise<any> {\n        return super.findMany(ids, toLoadEmbededChilds);\n    }\n\n    preRead(params: EntityActionParam): Q.Promise<EntityActionParam> {\n        return Q.when(params);\n    }\n\n    postRead(params: EntityActionParam): Q.Promise<any> {\n        return Q.when(params);\n    }\n\n    preBulkRead(params: Array<EntityActionParam>): Q.Promise<Array<EntityActionParam>> {\n        return Q.when(params);\n    }\n\n    postBulkRead(params: Array<EntityActionParam>): Q.Promise<Array<EntityActionParam>> {\n        return Q.when(params);\n    }\n\n    doFindValue(id) {\n        return this.findOne(id).then((result: teacher) => {\n            var a = result.physics_LAZY();\n            return result;\n        });\n    }\n\n    doAddTeacherWorker(obj: teacher) {\n        return this._teacherService.addTeacherWorker(obj);\n    }\n\n    doAddTeacherProcessControl(obj: teacher) {\n        return this._teacherService.addTeacherProcessControl(obj);\n    }\n\n    doUpdateTeacherProcessControlAndWorker(obj: teacher) {\n        return this._teacherService.addTeacherProcessControlAndWorker(obj);\n    }\n\n    doLongTask() {\n        return this._teacherService.longTask();\n    }\n\n    doUpdateMany(ids, obj) {\n        return this.bulkPutMany(ids, obj);;\n    }\n\n    doFindWhere() {\n        return this.findWhere({\n            _id: {\n                $in: [Types.ObjectId(\"596a72000f404ef43c8e1a5a\"), Types.ObjectId(\"59a3dee5c21673e8200c6d8f\")]\n            }\n        }).then(rs => {\n            return this.findMany([Types.ObjectId(\"596a72000f404ef43c8e1a5a\"), Types.ObjectId(\"59a3dee5c21673e8200c6d8f\")]).then(r => {\n                return this.delete(Types.ObjectId(\"596a72000f404ef43c8e1a5a\")).then(d => {\n                    return this.findMany([Types.ObjectId(\"596a72000f404ef43c8e1a5a\"), Types.ObjectId(\"59a3dee5c21673e8200c6d8f\")]).then(r => {\n                        let t = r;\n                        return t;\n                    });\n                });\n            });\n        });\n\n    }\n\n}\nexport default TeacherRepository;"],"sourceRoot":"/source/"}